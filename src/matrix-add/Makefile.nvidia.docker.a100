# configuration

TEST_CLASS = benchmark
TEST_CASE  = matrix-add
BUILD_DIR  = ../../build/matrix-add


# default parameters

PARAMETERS = 4096 4096 2 10


# all

targets = \
	matrix-add-base \
	matrix-add-omp-host \
	matrix-add-omp-target-expl \
	matrix-add-omp-target-mm \
	matrix-add-openacc-expl \
	matrix-add-openacc-mm \
	matrix-add-cuda-expl \
	matrix-add-cuda-mm \
	matrix-add-sycl-buffer \
	matrix-add-sycl-expl \
	matrix-add-sycl-mm \
	matrix-add-std-par \
	matrix-add-thrust-expl \
	matrix-add-thrust-mm \
	matrix-add-kokkos-serial \
	matrix-add-kokkos-omp-host \
	matrix-add-kokkos-cuda

.PHONY: all
all: mk-target-dir $(targets)

.PHONY: mk-target-dir
mk-target-dir:
	mkdir -p $(BUILD_DIR)


# build rules

$(BUILD_DIR)/matrix-add-base: matrix-add-base.cpp matrix-add-util.h ../util.h | mk-target-dir
	g++ -O3 -march=native -std=c++17 -o $(BUILD_DIR)/matrix-add-base matrix-add-base.cpp

$(BUILD_DIR)/matrix-add-omp-host: matrix-add-omp-host.cpp matrix-add-util.h ../util.h | mk-target-dir
	g++ -O3 -march=native -std=c++17 -fopenmp -o $(BUILD_DIR)/matrix-add-omp-host matrix-add-omp-host.cpp

$(BUILD_DIR)/matrix-add-omp-target-expl: matrix-add-omp-target-expl.cpp matrix-add-util.h ../util.h | mk-target-dir
	nvc++ -O3 -std=c++17 -mp=gpu -target=gpu -o $(BUILD_DIR)/matrix-add-omp-target-expl matrix-add-omp-target-expl.cpp

$(BUILD_DIR)/matrix-add-omp-target-mm: matrix-add-omp-target-mm.cpp matrix-add-util.h ../util.h | mk-target-dir
	nvc++ -O3 -std=c++17 -mp=gpu -target=gpu -gpu=mem:managed -o $(BUILD_DIR)/matrix-add-omp-target-mm matrix-add-omp-target-mm.cpp

$(BUILD_DIR)/matrix-add-openacc-expl: matrix-add-openacc-expl.cpp matrix-add-util.h ../util.h | mk-target-dir
	nvc++ -O3 -std=c++17 -acc=gpu -target=gpu -o $(BUILD_DIR)/matrix-add-openacc-expl matrix-add-openacc-expl.cpp

$(BUILD_DIR)/matrix-add-openacc-mm: matrix-add-openacc-mm.cpp matrix-add-util.h ../util.h | mk-target-dir
	nvc++ -O3 -std=c++17 -acc=gpu -target=gpu -gpu=mem:managed -o $(BUILD_DIR)/matrix-add-openacc-mm matrix-add-openacc-mm.cpp

$(BUILD_DIR)/matrix-add-cuda-expl: matrix-add-cuda-expl.cu matrix-add-util.h ../util.h | mk-target-dir
	nvcc -O3 -std=c++17 -arch=sm_80 --expt-extended-lambda --expt-relaxed-constexpr -o $(BUILD_DIR)/matrix-add-cuda-expl matrix-add-cuda-expl.cu

$(BUILD_DIR)/matrix-add-cuda-mm: matrix-add-cuda-mm.cu matrix-add-util.h ../util.h | mk-target-dir
	nvcc -O3 -std=c++17 -arch=sm_80 --expt-extended-lambda --expt-relaxed-constexpr -o $(BUILD_DIR)/matrix-add-cuda-mm matrix-add-cuda-mm.cu

$(BUILD_DIR)/matrix-add-sycl-buffer: matrix-add-sycl-buffer.cpp matrix-add-util.h ../util.h | mk-target-dir
	icpx -O3 -march=native -std=c++17 -fsycl -fsycl-targets=nvptx64-nvidia-cuda -Xsycl-target-backend --cuda-gpu-arch=sm_80 -o $(BUILD_DIR)/matrix-add-sycl-buffer matrix-add-sycl-buffer.cpp

$(BUILD_DIR)/matrix-add-sycl-expl: matrix-add-sycl-expl.cpp matrix-add-util.h ../util.h | mk-target-dir
	icpx -O3 -march=native -std=c++17 -fsycl -fsycl-targets=nvptx64-nvidia-cuda -Xsycl-target-backend --cuda-gpu-arch=sm_80 -o $(BUILD_DIR)/matrix-add-sycl-expl matrix-add-sycl-expl.cpp

$(BUILD_DIR)/matrix-add-sycl-mm: matrix-add-sycl-mm.cpp matrix-add-util.h ../util.h | mk-target-dir
	icpx -O3 -march=native -std=c++17 -fsycl -fsycl-targets=nvptx64-nvidia-cuda -Xsycl-target-backend --cuda-gpu-arch=sm_80 -o $(BUILD_DIR)/matrix-add-sycl-mm matrix-add-sycl-mm.cpp

$(BUILD_DIR)/matrix-add-std-par: matrix-add-std-par.cpp matrix-add-util.h ../util.h | mk-target-dir
	nvc++ -O3 -std=c++17 -stdpar=gpu -target=gpu -gpu=cc80 -o $(BUILD_DIR)/matrix-add-std-par matrix-add-std-par.cpp

$(BUILD_DIR)/matrix-add-thrust-expl: matrix-add-thrust-expl.cu matrix-add-util.h ../util.h
	nvcc -O3 -std=c++17 --extended-lambda -arch=sm_80 -o $(BUILD_DIR)/matrix-add-thrust-expl matrix-add-thrust-expl.cu

$(BUILD_DIR)/matrix-add-thrust-mm: matrix-add-thrust-mm.cu matrix-add-util.h ../util.h
	nvcc -O3 -std=c++17 --extended-lambda -arch=sm_80 -o $(BUILD_DIR)/matrix-add-thrust-mm matrix-add-thrust-mm.cu

$(BUILD_DIR)/matrix-add-kokkos-serial: matrix-add-kokkos.cpp matrix-add-util.h ../util.h | mk-target-dir
	g++ -O3 -march=native -std=c++20 -I/root/kokkos/install-serial/include -L/root/kokkos/install-serial/lib -o $(BUILD_DIR)/matrix-add-kokkos-serial matrix-add-kokkos.cpp -lkokkoscore -ldl

$(BUILD_DIR)/matrix-add-kokkos-omp-host: matrix-add-kokkos.cpp matrix-add-util.h ../util.h | mk-target-dir
	g++ -O3 -march=native -std=c++20 -fopenmp -I/root/kokkos/install-omp/include -L/root/kokkos/install-omp/lib -o $(BUILD_DIR)/matrix-add-kokkos-omp-host matrix-add-kokkos.cpp -lkokkoscore -ldl

$(BUILD_DIR)/matrix-add-kokkos-cuda: matrix-add-kokkos.cpp matrix-add-util.h ../util.h | mk-target-dir
	/root/kokkos/install-cuda/bin/nvcc_wrapper -O3 -march=native -std=c++20 -arch=sm_80 --expt-extended-lambda --expt-relaxed-constexpr -I/root/kokkos/install-cuda/include -L/root/kokkos/install-cuda/lib -o $(BUILD_DIR)/matrix-add-kokkos-cuda matrix-add-kokkos.cpp -lkokkoscore -ldl -lcuda


# aliases without build directory

.PHONY: matrix-add-base
matrix-add-base: $(BUILD_DIR)/matrix-add-base

.PHONY: matrix-add-omp-host
matrix-add-omp-host: $(BUILD_DIR)/matrix-add-omp-host

.PHONY: matrix-add-omp-target-expl
matrix-add-omp-target-expl: $(BUILD_DIR)/matrix-add-omp-target-expl

.PHONY: matrix-add-omp-target-mm
matrix-add-omp-target-mm: $(BUILD_DIR)/matrix-add-omp-target-mm

.PHONY: matrix-add-openacc-expl
matrix-add-openacc-expl: $(BUILD_DIR)/matrix-add-openacc-expl

.PHONY: matrix-add-openacc-mm
matrix-add-openacc-mm: $(BUILD_DIR)/matrix-add-openacc-mm

.PHONY: matrix-add-cuda-expl
matrix-add-cuda-expl: $(BUILD_DIR)/matrix-add-cuda-expl

.PHONY: matrix-add-cuda-mm
matrix-add-cuda-mm: $(BUILD_DIR)/matrix-add-cuda-mm

.PHONY: matrix-add-sycl-buffer
matrix-add-sycl-buffer: $(BUILD_DIR)/matrix-add-sycl-buffer

.PHONY: matrix-add-sycl-expl
matrix-add-sycl-expl: $(BUILD_DIR)/matrix-add-sycl-expl

.PHONY: matrix-add-sycl-mm
matrix-add-sycl-mm: $(BUILD_DIR)/matrix-add-sycl-mm

.PHONY: matrix-add-std-par
matrix-add-std-par: $(BUILD_DIR)/matrix-add-std-par

.PHONY: matrix-add-thrust-expl
matrix-add-thrust-expl: $(BUILD_DIR)/matrix-add-thrust-expl

.PHONY: matrix-add-thrust-mm
matrix-add-thrust-mm: $(BUILD_DIR)/matrix-add-thrust-mm

.PHONY: matrix-add-kokkos-serial
matrix-add-kokkos-serial: $(BUILD_DIR)/matrix-add-kokkos-serial

.PHONY: matrix-add-kokkos-omp-host
matrix-add-kokkos-omp-host: $(BUILD_DIR)/matrix-add-kokkos-omp-host

.PHONY: matrix-add-kokkos-cuda
matrix-add-kokkos-cuda: $(BUILD_DIR)/matrix-add-kokkos-cuda


# automated benchmark target

.PHONY: bench
bench: all
	@echo "Base:"
	$(BUILD_DIR)/matrix-add-base $(PARAMETERS)
	@echo ""

	@echo "OpenMP Host:"
	$(BUILD_DIR)/matrix-add-omp-host $(PARAMETERS)
	@echo ""

	@echo "OpenMP Target Explicit Memory:"
	$(BUILD_DIR)/matrix-add-omp-target-expl $(PARAMETERS)
	@echo ""

	@echo "OpenMP Target Managed Memory:"
	$(BUILD_DIR)/matrix-add-omp-target-mm $(PARAMETERS)
	@echo ""

	@echo "OpenACC Explicit Memory:"
	$(BUILD_DIR)/matrix-add-openacc-expl $(PARAMETERS)
	@echo ""

	@echo "OpenACC Managed Memory:"
	$(BUILD_DIR)/matrix-add-openacc-mm $(PARAMETERS)
	@echo ""

	@echo "CUDA Explicit Memory:"
	$(BUILD_DIR)/matrix-add-cuda-expl $(PARAMETERS)
	@echo ""

	@echo "CUDA Managed Memory:"
	$(BUILD_DIR)/matrix-add-cuda-mm $(PARAMETERS)
	@echo ""

	@echo "SYCL Buffer:"
	$(BUILD_DIR)/matrix-add-sycl-buffer $(PARAMETERS)
	@echo ""

	@echo "SYCL Explicit Memory:"
	$(BUILD_DIR)/matrix-add-sycl-expl $(PARAMETERS)
	@echo ""

	@echo "SYCL Managed Memory:"
	$(BUILD_DIR)/matrix-add-sycl-mm $(PARAMETERS)
	@echo ""

	@echo "std::par:"
	$(BUILD_DIR)/matrix-add-std-par $(PARAMETERS)
	@echo ""

	@echo "Thrust Explicit Memory:"
	$(BUILD_DIR)/matrix-add-thrust-expl $(PARAMETERS)
	@echo ""

	@echo "Thrust Managed Memory:"
	$(BUILD_DIR)/matrix-add-thrust-mm $(PARAMETERS)
	@echo ""

	@echo "Kokkos Host Serial:"
	$(BUILD_DIR)/matrix-add-kokkos-serial $(PARAMETERS)
	@echo ""

	@echo "Kokkos Host OpenMP:"
	$(BUILD_DIR)/matrix-add-kokkos-omp-host $(PARAMETERS)
	@echo ""

	@echo "Kokkos CUDA:"
	$(BUILD_DIR)/matrix-add-kokkos-cuda $(PARAMETERS)
	@echo ""


# clean target

.PHONY: clean
clean:
	@for target in $(targets); do 		rm -f $(BUILD_DIR)/$$target; 	done

